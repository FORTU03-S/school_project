# Generated by Django 5.0.6 on 2025-07-09 19:31

import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=255, verbose_name='Sujet')),
                ('message', models.TextField(verbose_name='Message')),
                ('notification_type', models.CharField(choices=[('ABSENCE', 'Absence Enfant'), ('EVALUATION', 'Évaluation à venir'), ('HOMEWORK', 'Devoir à faire'), ('QUIZ', 'Interrogation / Quiz'), ('MESSAGE_TEACHER', "Message de l'enseignant"), ('PAYMENT', 'Statut de Paiement'), ('REPORT_CARD', 'Bulletin Scolaire'), ('GENERAL', 'Général')], max_length=50, verbose_name='Type de notification')),
                ('is_read', models.BooleanField(default=False, verbose_name='Lu')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Date/Heure')),
                ('read_at', models.DateTimeField(blank=True, null=True, verbose_name='Lu à')),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Parent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, verbose_name='Prénom du parent')),
                ('last_name', models.CharField(max_length=100, verbose_name='Nom du parent')),
                ('is_approved', models.BooleanField(default=False, verbose_name='Approuvé')),
            ],
            options={
                'verbose_name': 'Parent',
                'verbose_name_plural': 'Parents',
                'ordering': ['school__name', 'last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, verbose_name="Prénom de l'élève")),
                ('last_name', models.CharField(max_length=100, verbose_name="Nom de l'élève")),
                ('middle_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Post-nom')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Date de naissance')),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Homme'), ('Female', 'Femme'), ('Other', 'Autre')], max_length=10, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='Numéro de Téléphone')),
                ('email', models.EmailField(blank=True, max_length=255, null=True, unique=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='student_profiles/')),
                ('student_id_code', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name="Code d'identification élève")),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('enrollment_date', models.DateField(default=django.utils.timezone.now, verbose_name="Date d'inscription")),
            ],
            options={
                'verbose_name': 'Élève',
                'verbose_name_plural': 'Élèves',
                'ordering': ['school__name', 'last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='adresse email')),
                ('user_type', models.CharField(choices=[('STUDENT', 'Élève'), ('PARENT', 'Parent'), ('TEACHER', 'Enseignant'), ('DIRECTION', 'Direction'), ('ACCOUNTANT', 'Comptable'), ('ADMIN', 'ADMIN'), ('STAFF', 'Personnel Administratif')], default='STAFF', max_length=20, verbose_name="Type d'utilisateur")),
                ('first_name', models.CharField(max_length=150, verbose_name='prénom')),
                ('last_name', models.CharField(max_length=150, verbose_name='nom de famille')),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='Numéro de Téléphone')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Adresse')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pics/', verbose_name='Photo de profil')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Date de naissance')),
                ('is_approved', models.BooleanField(default=False, verbose_name='Approuvé')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'Utilisateur Personnalisé',
                'verbose_name_plural': 'Utilisateurs Personnalisés',
                'ordering': ['last_name', 'first_name', 'email'],
            },
        ),
    ]
