# Generated by Django 5.0.6 on 2025-06-17 09:40

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('profiles', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AcademicPeriod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nom de la Période')),
                ('start_date', models.DateField(verbose_name='Date de début')),
                ('end_date', models.DateField(verbose_name='Date de fin')),
                ('is_current', models.BooleanField(default=False, verbose_name='Période Actuelle')),
            ],
            options={
                'verbose_name': 'Période Académique',
                'verbose_name_plural': 'Périodes Académiques',
                'ordering': ['school__name', '-start_date'],
            },
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name="Nom de l'École")),
                ('address', models.TextField(blank=True, null=True, verbose_name='Adresse')),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='Numéro de Téléphone')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email de contact')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='school_logos/', verbose_name="Logo de l'École")),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
            ],
            options={
                'verbose_name': 'École',
                'verbose_name_plural': 'Écoles',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Classe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('level', models.CharField(max_length=50)),
                ('academic_period', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='classes_in_period', to='school.academicperiod')),
                ('main_teacher', models.ForeignKey(blank=True, limit_choices_to={'user_type': 'TEACHER'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='main_classes', to=settings.AUTH_USER_MODEL)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='classes', to='school.school')),
            ],
            options={
                'verbose_name': 'Classe',
                'verbose_name_plural': 'Classes',
                'unique_together': {('name', 'academic_period', 'school')},
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nom du Cours')),
                ('code', models.CharField(blank=True, max_length=20, null=True, unique=True, verbose_name='Code du Cours')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description du Cours')),
                ('credits', models.DecimalField(decimal_places=2, default=0.0, max_digits=4, verbose_name='Crédits ECTS/Unités')),
                ('academic_period', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.academicperiod', verbose_name='Période Académique')),
                ('classe', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='courses_for_class', to='school.classe', verbose_name='Classe ciblée')),
                ('teachers', models.ManyToManyField(blank=True, limit_choices_to={'user_type': 'TEACHER'}, related_name='taught_courses', to=settings.AUTH_USER_MODEL, verbose_name='Enseignants Associés')),
                ('school', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='courses', to='school.school', verbose_name='École')),
            ],
            options={
                'verbose_name': 'Cours',
                'verbose_name_plural': 'Cours',
                'ordering': ['school__name', 'classe__name', 'subject__name', 'name'],
            },
        ),
        migrations.CreateModel(
            name='DisciplinaryRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('incident_date', models.DateField()),
                ('description', models.TextField()),
                ('action_taken', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('reported_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reported_disciplinary_records', to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disciplinary_records', to='profiles.student')),
            ],
            options={
                'ordering': ['-incident_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrollment_date', models.DateField(auto_now_add=True, verbose_name="Date d'inscription")),
                ('status', models.CharField(choices=[('active', 'Actif'), ('inactive', 'Inactif'), ('suspended', 'Suspendu'), ('completed', 'Terminé'), ('withdrawn', 'Abandonné')], default='active', help_text="Statut actuel de l'inscription de l'étudiant à ce cours.", max_length=20, verbose_name="Statut d'Inscription")),
                ('academic_period', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='school.academicperiod', verbose_name='Période Académique')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='school.course', verbose_name='Cours')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='profiles.student', verbose_name='Élève')),
            ],
            options={
                'verbose_name': 'Inscription',
                'verbose_name_plural': 'Inscriptions',
                'ordering': ['student__school__name', 'student__last_name', 'student__first_name', 'course__name'],
                'unique_together': {('student', 'course', 'academic_period')},
            },
        ),
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name="Nom de l'évaluation")),
                ('evaluation_type', models.CharField(choices=[('EXAM', 'Examen'), ('QUIZ', 'Quiz'), ('HOMEWORK', 'Devoir'), ('PROJECT', 'Projet'), ('PARTICIPATION', 'Participation'), ('OTHER', 'Autre')], default='EXAM', max_length=50, verbose_name="Type d'évaluation")),
                ('date', models.DateField(verbose_name="Date de l'évaluation")),
                ('max_score', models.DecimalField(decimal_places=2, default=20.0, max_digits=5, verbose_name='Score maximum')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('academic_period', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluations', to='school.academicperiod', verbose_name='Période Académique')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluations', to='school.course', verbose_name='Cours')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_evaluations', to=settings.AUTH_USER_MODEL, verbose_name='Créé par')),
            ],
            options={
                'verbose_name': 'Évaluation',
                'verbose_name_plural': 'Évaluations',
                'ordering': ['-date', 'course__name', 'name'],
                'unique_together': {('name', 'course', 'date', 'academic_period')},
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_paid', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Montant payé')),
                ('payment_date', models.DateField(verbose_name='Date de paiement')),
                ('payment_status', models.CharField(choices=[('FULL', 'Totalement Réglé'), ('PARTIAL', 'Partiellement Réglé'), ('DUE', 'Dû / En Attente'), ('OVERDUE', 'En Retard')], default='DUE', max_length=50, verbose_name='Statut du paiement')),
                ('transaction_id', models.CharField(blank=True, help_text='Numéro de transaction ou référence du paiement.', max_length=100, null=True, unique=True, verbose_name='ID Transaction')),
                ('academic_period', models.ForeignKey(help_text='Période académique concernée par ce paiement.', on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='school.academicperiod', verbose_name='Période Académique')),
                ('recorded_by', models.ForeignKey(blank=True, limit_choices_to={'user_type': 'ACCOUNTANT'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payments_recorded', to=settings.AUTH_USER_MODEL, verbose_name='Enregistré par')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='profiles.student', verbose_name='Élève')),
            ],
            options={
                'verbose_name': 'Paiement',
                'verbose_name_plural': 'Paiements',
                'ordering': ['-payment_date', 'student__last_name'],
            },
        ),
        migrations.AddField(
            model_name='academicperiod',
            name='school',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='academic_periods', to='school.school', verbose_name='École'),
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nom de la Matière')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('school', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subjects', to='school.school', verbose_name='École')),
            ],
            options={
                'verbose_name': 'Matière',
                'verbose_name_plural': 'Matières',
                'ordering': ['school__name', 'name'],
                'unique_together': {('school', 'name')},
            },
        ),
        migrations.AddField(
            model_name='course',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses_offered', to='school.subject', verbose_name='Matière'),
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Date')),
                ('is_present', models.BooleanField(default=True, verbose_name='Présent')),
                ('reason_for_absence', models.TextField(blank=True, null=True, verbose_name="Raison de l'absence")),
                ('marked_by', models.ForeignKey(blank=True, limit_choices_to={'user_type__in': ['TEACHER', 'DIRECTION']}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='attendances_marked', to=settings.AUTH_USER_MODEL, verbose_name='Marqué par')),
                ('enrollment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='attendances_related', to='school.enrollment', verbose_name='Inscription')),
            ],
            options={
                'verbose_name': 'Présence',
                'verbose_name_plural': 'Présences',
                'ordering': ['-date', 'enrollment__student__last_name', 'enrollment__student__first_name'],
                'unique_together': {('enrollment', 'date')},
            },
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Note')),
                ('date_graded', models.DateField(auto_now_add=True, null=True, verbose_name='Date de notation')),
                ('remarks', models.TextField(blank=True, null=True, verbose_name='Remarques')),
                ('enrollment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grades', to='school.enrollment', verbose_name='Inscription')),
                ('evaluation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grades', to='school.evaluation', verbose_name='Évaluation')),
                ('graded_by', models.ForeignKey(blank=True, limit_choices_to={'user_type': 'TEACHER'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='grades_given', to=settings.AUTH_USER_MODEL, verbose_name='Noté par')),
            ],
            options={
                'verbose_name': 'Note',
                'verbose_name_plural': 'Notes',
                'ordering': ['-date_graded', 'enrollment__student__last_name', 'enrollment__student__first_name'],
                'unique_together': {('enrollment', 'evaluation')},
            },
        ),
        migrations.CreateModel(
            name='ReportCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pdf_file', models.FileField(blank=True, null=True, upload_to='report_cards/', verbose_name='Fichier PDF du Bulletin')),
                ('generated_date', models.DateField(auto_now_add=True, verbose_name='Date de génération')),
                ('status', models.CharField(choices=[('DRAFT', 'Brouillon'), ('FINAL', 'Final'), ('SENT', 'Envoyé aux Parents')], default='DRAFT', max_length=50, verbose_name='Statut du Bulletin')),
                ('academic_period', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='report_cards', to='school.academicperiod', verbose_name='Période Académique')),
                ('generated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='generated_report_cards', to=settings.AUTH_USER_MODEL, verbose_name='Généré par')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='report_cards', to='profiles.student', verbose_name='Élève')),
            ],
            options={
                'verbose_name': 'Bulletin Scolaire',
                'verbose_name_plural': 'Bulletins Scolaires',
                'ordering': ['-academic_period__start_date', 'student__last_name', 'student__first_name'],
                'unique_together': {('student', 'academic_period')},
            },
        ),
        migrations.CreateModel(
            name='ClassAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('academic_period', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='school.academicperiod', verbose_name='Période Académique')),
                ('teacher', models.ForeignKey(limit_choices_to={'user_type': 'TEACHER'}, on_delete=django.db.models.deletion.CASCADE, related_name='class_assignments', to=settings.AUTH_USER_MODEL, verbose_name='Enseignant Assigné')),
                ('classe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned_teachers', to='school.classe', verbose_name='Classe Assignée')),
                ('school', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='class_assignments', to='school.school', verbose_name='École')),
            ],
            options={
                'verbose_name': 'Assignation de Classe',
                'verbose_name_plural': 'Assignations de Classes',
                'ordering': ['school__name', 'academic_period__start_date', 'classe__name', 'teacher__last_name', 'teacher__first_name'],
                'unique_together': {('school', 'teacher', 'classe', 'academic_period')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='academicperiod',
            unique_together={('school', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='course',
            unique_together={('school', 'name', 'subject', 'classe', 'academic_period')},
        ),
        migrations.CreateModel(
            name='TuitionFee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Montant des frais')),
                ('date_set', models.DateField(auto_now_add=True, verbose_name='Date de définition')),
                ('academic_period', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tuition_fees', to='school.academicperiod', verbose_name='Période Académique')),
                ('classe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tuition_fees', to='school.classe', verbose_name='Classe')),
                ('set_by', models.ForeignKey(blank=True, limit_choices_to={'user_type__in': ['ADMIN', 'ACCOUNTANT', 'DIRECTION']}, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Défini par')),
            ],
            options={
                'verbose_name': 'Frais de Scolarité',
                'verbose_name_plural': 'Frais de Scolarité',
                'ordering': ['-academic_period', 'classe__name'],
                'unique_together': {('classe', 'academic_period')},
            },
        ),
    ]
